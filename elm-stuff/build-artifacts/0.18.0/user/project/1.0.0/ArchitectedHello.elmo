var _user$project$ArchitectedHello$myStyle = function (size) {
	return _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {
				ctor: '_Tuple2',
				_0: 'fontSize',
				_1: A2(
					_elm_lang$core$Basics_ops['++'],
					_elm_lang$core$Basics$toString(size),
					'em')
			},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'color', _1: 'teal'},
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$ArchitectedHello$shrinkSize = function (size) {
	return (_elm_lang$core$Native_Utils.cmp(size, 1) < 1) ? size : (size - 1);
};
var _user$project$ArchitectedHello$removeExclamation = function (string) {
	return A2(_elm_lang$core$String$endsWith, '!', string) ? A2(_elm_lang$core$String$dropRight, 1, string) : string;
};
var _user$project$ArchitectedHello$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'AddExcl':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						text: A2(_elm_lang$core$Basics_ops['++'], model.text, '!')
					});
			case 'RemExcl':
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						text: _user$project$ArchitectedHello$removeExclamation(model.text)
					});
			case 'SizeUp':
				return _elm_lang$core$Native_Utils.update(
					model,
					{size: model.size + 1});
			default:
				return _elm_lang$core$Native_Utils.update(
					model,
					{
						size: _user$project$ArchitectedHello$shrinkSize(model.size)
					});
		}
	});
var _user$project$ArchitectedHello$Model = F2(
	function (a, b) {
		return {text: a, size: b};
	});
var _user$project$ArchitectedHello$model = A2(_user$project$ArchitectedHello$Model, 'Hello World', 1);
var _user$project$ArchitectedHello$SizeDown = {ctor: 'SizeDown'};
var _user$project$ArchitectedHello$SizeUp = {ctor: 'SizeUp'};
var _user$project$ArchitectedHello$RemExcl = {ctor: 'RemExcl'};
var _user$project$ArchitectedHello$AddExcl = {ctor: 'AddExcl'};
var _user$project$ArchitectedHello$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _user$project$ArchitectedHello$myStyle(model.size),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.text),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$ArchitectedHello$AddExcl),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('!!'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$ArchitectedHello$RemExcl),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('REM'),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$ArchitectedHello$SizeUp),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('++'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$ArchitectedHello$SizeDown),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('--'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$ArchitectedHello$main = _elm_lang$html$Html$beginnerProgram(
	{model: _user$project$ArchitectedHello$model, view: _user$project$ArchitectedHello$view, update: _user$project$ArchitectedHello$update})();
